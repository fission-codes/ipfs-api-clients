/* 
 * FISSION
 *
 * Easily use IPFS from Web 2.0 applications
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@fission.codes
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing IPFSApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class IPFSApiTests
    {
        private IPFSApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new IPFSApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of IPFSApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' IPFSApi
            //Assert.IsInstanceOfType(typeof(IPFSApi), instance, "instance is a IPFSApi");
        }

        
        /// <summary>
        /// Test IpfsPeersGet
        /// </summary>
        [Test]
        public void IpfsPeersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IpfsPeersGet();
            //Assert.IsInstanceOf<List<IPFSPeer>> (response, "response is List<IPFSPeer>");
        }
        
        /// <summary>
        /// Test IpfsPost
        /// </summary>
        [Test]
        public void IpfsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string file = null;
            //var response = instance.IpfsPost(file);
            //Assert.IsInstanceOf<IPFSAddress> (response, "response is IPFSAddress");
        }
        
    }

}
